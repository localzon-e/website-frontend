{"version":3,"sources":["webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js"],"names":["SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ADD","REMOVE","Kinetic","decay","minVelocity","delay","this","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","prototype","begin","length","update","x","y","push","Date","now","end","lastIndex","firstIndex","duration","dx","dy","Math","atan2","sqrt","getDistance","getAngle","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","__","constructor","create","Observable","_super","_this","revision_","changed","dispatchEvent","CHANGE","getRevision","on","type","listener","isArray","len","keys","i","once","key","ol_key","un","unByKey","ii","removeEventListener","ANIMATING","INTERACTING","POSTRENDER","MOVESTART","MOVEEND","Tile","tileCoord","state","opt_options","options","interimTile","hifi","transition_","undefined","transition","transitionStarts_","release","getKey","getInterimTile","tile","getState","LOADED","refreshInterimChain","prev","LOADING","IDLE","getTileCoord","setState","ERROR","Error","load","getAlpha","id","time","start","delta","inTransition","endTransition","MapEvent","map","opt_frameState","frameState","Event","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","defineProperty","get","getEventPixel","set","pixel","enumerable","configurable","getCoordinateFromPixel","coordinate","preventDefault","stopPropagation","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","element","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","bind","addEventListener","EventType","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","event","pointerId","handlePointerUp_","propagationStopped","isMouseActionButton_","forEach","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","disposeInternal","LAYERGROUP","SIZE","TARGET","VIEW","TileQueue","tilePriorityFunction","tileChangeCallback","apply","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","enqueue","added","getTilesLoading","TileState","EMPTY","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","PriorityQueue","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","center","viewState","deltaX","deltaY","log","PluggableMap","optionsInternal","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","document","createElement","className","window","style","position","overflow","width","height","overlayContainer_","zIndex","pointerEvents","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","controls","Collection","interactions","overlays_","overlays","overlayIdIndex_","renderer_","handleResize_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","values","control","setMap","CollectionEventType","interaction","addOverlayInternal_","overlay","getId","toString","createRenderer","addControl","getControls","addInteraction","getInteractions","addLayer","layer","layers","getLayerGroup","getLayers","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","callback","getCoordinateFromPixelInternal","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","target","getElementById","getView","getProjection","pixelToCoordinateTransform","slice","getOverlayById","getLoading","layerStatesArray","getLayerStatesArray","source","getSource","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getRenderer","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","opt_type","mapBrowserEvent","handleMapBrowserEvent","eventType","WHEEL","KEYDOWN","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getArray","getMap","getActive","cont","handleEvent","handlePostRender","tileQueue","isEmpty","hints","viewHints","ViewHint","lowOnFrameBudget","reprioritize","hasListener","RENDERCOMPLETE","animate","dispatchRenderEvent","postRenderFunctions","getAnimating","resolveConstraints","render","targetElement","CONTEXTMENU","RESIZE","dispose","KEYPRESS","updateSize","cancelAnimationFrame","handleViewPropertyChanged_","view","updateViewportSize_","ObjectEventType","PROPERTYCHANGE","layerGroup","isRendered","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","requestAnimationFrame","removeControl","remove","removeInteraction","removeLayer","removeOverlay","size","previousFrameState","isDef","getHints","declutterTree","extent","resolution","rotation","index","layerIndex","usedTiles","renderFrame","moveStart","MapEventType","idle","setLayerGroup","setSize","setView","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","parseInt","setViewportSize","View","Map","onFocusOnly","Composite","ImageBase","getExtent","getImage","getPixelRatio","getResolution","ImageWrapper","src","crossOrigin","imageLoadFunction","ImageState","src_","image_","Image","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","setImage","image","loadHandler","errorHandler","img","promise","decode","listening_1","unlisten","then","catch","error","name","message","listenerKeys","LOAD","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ctx","fillStyle","fillRect","canvas","AssertionError","code","path","split","TileCache","arguments","expireCache","canExpireCache","peekLast","pop","pruneExceptNewestZ","peekFirstKey","z","CENTER","RESOLUTION","ROTATION","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","projection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","properties","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","maxResolution","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","resolutions","padding","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","options_","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","args","anchor","animateInternal","animationCount","animationCallback","series","animation","complete","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","PI","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","j","jj","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","currentResolution","opt_rotation","w","h","cos","sin","opt_size","getCenter","ViewProperty","getConstraints","getConstrainResolution","constrainResolution","opt_hints","calculateExtent","calculateExtentInternal","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","max","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","value","pow","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","calculateCenterOn","offset","nearest","baseLevel","floor","fit","geometryOrExtent","geometry","getType","GeometryType","CIRCLE","rotate","userProjection","clone","transform","fitInternal","coords","getFlatCoordinates","cosAngle","sinAngle","minRotX","Infinity","minRotY","maxRotX","maxRotY","stride","getStride","rotX","rotY","min","isNaN","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","ratio","opt_anchor","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","direction","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smooth","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","showFullExtent","projExtent","Units","DEGREES","getMetersPerUnit","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","Disposable","disposed","TileRange","minX","maxX","minY","maxY","containsXY","containsTileRange","tileRange","equals","extend","getHeight","getWidth","intersects","createOrUpdate","ObjectEvent","oldValue","BaseObject","opt_values","values_","getKeys","getProperties","hasProperties","notify","getChangeEventType","opt_silent","applyProperties","unset","changeEventTypeCache","Property","LENGTH","CollectionEvent","opt_element","opt_index","opt_array","unique_","unique","array_","assertUnique_","updateLength_","clear","getLength","arr","f","array","item","insertAt","elem","splice","removeAt","n","setAt","opt_except"],"mappings":"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","file":"js/chunk-vendors~5ec6ddb9.068aa48f.js","sourcesContent":["/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map"],"sourceRoot":""}